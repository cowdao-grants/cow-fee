# RPC
RPC_URL=wss://mainnet.gateway.tenderly.co

################################
# Keeper
################################
# Private key. Only required when running the `drip` script
PRIVATE_KEY=


################################
# Deploy
################################
# Ethereum address receiving the fees (recipient of CoW order)
RECEIVER=0xA03be496e67Ec29bC62F01a428683D7F9c204930

# ERC20 address of the buyToken in which you want to convert the fees into
WRAPPED_NATIVE_TOKEN=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2

# Module maintainer, only account with permission to execute the drip/approve/revoke on the Safe module
KEEPER=0x05C5494572E4aB2d48D3AB3aAF6bD4e7b1c98382

# CoW Protocol settlement contract address (see https://github.com/cowprotocol/contracts/blob/main/networks.json)
SETTLEMENT=0x9008D19f58AAbD9eD0D60971565AA8510560ab41

# byte32 hex with the app-data value (part of the CoW's order struct). Contains the hashed content of the order's meta-data 
# Check here how to make your own value: https://github.com/cowprotocol/app-data
APP_DATA=0xbcca8463f460f14bca0185afeeb75923ee4434612f41063d0171b1e743ffe84b

# Safe address (IMPORTANT: This safe must also be a whitelisted solver)
TARGET_SAFE=0x423cEc87f19F0778f549846e0801ee267a917935

# Minimum amount of WRAPPED_NATIVE_TOKEN (in atoms) to accept as the buyAmount of the orders (fees which drip less, won't bee extracted)
MIN_OUT=300000000000000000